{"ast":null,"code":"var _jsxFileName = \"/Users/jasonvo/Code/weather-application/src/components/Page.js\",\n    _s = $RefreshSig$();\n\nimport Form from './Form';\nimport Forecast from './Forecast';\nimport '../styles/Page.css';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport getCurrentForecast from '../helpers.js/getCurrentForecast';\nimport getCurrentForecastDetails from '../helpers.js/getCurrentForecastDetails';\nimport getUpcomingForecast from '../helpers.js/getUpcomingForecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASEURL = \"https://community-open-weather-map.p.rapidapi.com\";\n\nfunction Page() {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [forecast, setForecast] = useState(null);\n\n  const onSubmit = async location => {\n    try {\n      const currentWeather = await axios({\n        method: 'GET',\n        url: `${BASEURL}/weather`,\n        params: {\n          q: location,\n          units: 'imperial'\n        },\n        headers: {\n          'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n          'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n        }\n      });\n\n      if (!currentWeather.data || currentWeather.data.length === 0) {\n        setError(true);\n        throw new SyntaxError('Location was not found...');\n      }\n\n      const response = await axios({\n        method: 'GET',\n        url: `${BASEURL}/forecast/daily`,\n        params: {\n          id: currentWeather.data.id,\n          units: 'imperial'\n        },\n        headers: {\n          'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n          'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n        }\n      });\n\n      if (!response.data || response.data.length === 0) {\n        setError(true);\n        throw new SyntaxError('No additional forecast found for this location..');\n      }\n\n      const currentForecast = getCurrentForecast(currentWeather.data.main.temp, currentWeather.data.name, currentWeather.data.dt, currentWeather.data.weather[0]);\n      const currentForecastDetails = getCurrentForecastDetails(currentWeather.data.main, currentWeather.data.wind);\n      const upcomingForecast = getUpcomingForecast(response.data.list);\n      setForecast({\n        currentForecast,\n        currentForecastDetails,\n        upcomingForecast\n      });\n    } catch (err) {\n      setError(true);\n      setErrorMessage(err.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__header\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      submitSearch: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), forecast && !error && /*#__PURE__*/_jsxDEV(Forecast, {\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 38\n    }, this), !forecast && error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Page, \"tI/51YPTIukJB+RLeMuRqcExAfs=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/jasonvo/Code/weather-application/src/components/Page.js"],"names":["Form","Forecast","axios","useState","getCurrentForecast","getCurrentForecastDetails","getUpcomingForecast","BASEURL","Page","error","setError","errorMessage","setErrorMessage","forecast","setForecast","onSubmit","location","currentWeather","method","url","params","q","units","headers","process","env","REACT_APP_RAPID_API_KEY","data","length","SyntaxError","response","id","currentForecast","main","temp","name","dt","weather","currentForecastDetails","wind","upcomingForecast","list","err","message"],"mappings":"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","sourcesContent":["import Form from './Form'\nimport Forecast from './Forecast'\nimport '../styles/Page.css'\nimport axios from 'axios';\nimport { useState } from 'react'\nimport getCurrentForecast from '../helpers.js/getCurrentForecast';\nimport getCurrentForecastDetails from '../helpers.js/getCurrentForecastDetails';\nimport getUpcomingForecast from '../helpers.js/getUpcomingForecast';\n\nconst BASEURL = \"https://community-open-weather-map.p.rapidapi.com\"\n\nfunction Page() {\n\nconst [error, setError] = useState(false)\nconst [errorMessage, setErrorMessage] = useState('')\nconst [forecast, setForecast] = useState(null)\n\nconst onSubmit = async location => {\n\n    try {\n        const currentWeather = await axios({\n            method: 'GET',\n            url: `${BASEURL}/weather`,\n            params: {\n                q: location,\n                units: 'imperial'\n            },\n            headers: {\n                'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n                'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n            }\n        })\n\n        if (!currentWeather.data || currentWeather.data.length === 0) {\n            setError(true)\n            throw new SyntaxError('Location was not found...')\n        }\n\n        const response = await axios({\n            method: 'GET',\n            url: `${BASEURL}/forecast/daily`,\n            params: {\n                id: currentWeather.data.id,\n                units: 'imperial'\n            },\n            headers: {\n                'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n                'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n            }\n        })\n\n        if (!response.data || response.data.length === 0) {\n            setError(true)\n            throw new SyntaxError('No additional forecast found for this location..')\n        }\n\n        const currentForecast = getCurrentForecast(currentWeather.data.main.temp, currentWeather.data.name, currentWeather.data.dt, currentWeather.data.weather[0]);\n        const currentForecastDetails = getCurrentForecastDetails(currentWeather.data.main, currentWeather.data.wind)\n        const upcomingForecast = getUpcomingForecast(response.data.list)\n        setForecast({ currentForecast, currentForecastDetails, upcomingForecast })\n\n    } catch(err) {\n        setError(true)\n        setErrorMessage(err.response.data.message)\n    }\n}\n\n  return (\n        <div className=\"page__container\">\n            <div className='page__header'>Weather App</div>\n            <Form submitSearch={onSubmit} />\n            {(forecast && !error) && <Forecast forecast={forecast} />} \n            {(!forecast && error) && <div className=\"page__errorMessage\">{errorMessage}</div>}\n        </div>\n  )\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}