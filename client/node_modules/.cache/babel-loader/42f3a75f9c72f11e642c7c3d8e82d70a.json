{"ast":null,"code":"var _jsxFileName = \"/Users/jasonvo/Code/weather-application/src/components/Page.js\",\n    _s = $RefreshSig$();\n\nimport Form from './Form';\nimport Forecast from './Forecast';\nimport '../styles/Page.css';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport getCurrentForecast from '../helpers.js/getCurrentForecast';\nimport getCurrentForecastDetails from '../helpers.js/getCurrentForecastDetails';\nimport getUpcomingForecast from '../helpers.js/getUpcomingForecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASEURL = \"https://community-open-weather-map.p.rapidapi.com\";\n\nfunction Page() {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [showForm, setShowForm] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [forecast, setForecast] = useState(null);\n\n  const onSubmit = async location => {\n    const {\n      data\n    } = await axios({\n      method: 'GET',\n      url: `${BASEURL}/weather`,\n      params: {\n        q: location,\n        units: 'imperial'\n      },\n      headers: {\n        'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n        'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n      }\n    });\n\n    if (!data || data.length === 0) {\n      setError(true);\n      setErrorMessage(\"Location was not found...\");\n      return;\n    }\n\n    const response = await axios({\n      method: 'GET',\n      url: `${BASEURL}/forecast/daily`,\n      params: {\n        id: data.id,\n        units: 'imperial'\n      },\n      headers: {\n        'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n        'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n      }\n    });\n\n    if (!response.data || response.data.length === 0) {\n      setError(true);\n      setErrorMessage(\"No additional forecast found for this location..\");\n      return;\n    }\n\n    const currentForecast = getCurrentForecast(data.main.temp, data.name, data.dt, data.weather[0]);\n    const currentForecastDetails = getCurrentForecastDetails(data.main, data.wind);\n    const upcomingForecast = getUpcomingForecast(response.data.list);\n    setForecast({\n      currentForecast,\n      currentForecastDetails,\n      upcomingForecast\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__header\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      submitSearch: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"page__errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Page, \"n/Hn3lsnK9Sr0Dqi/n0v7mIDq7Q=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/jasonvo/Code/weather-application/src/components/Page.js"],"names":["Form","Forecast","axios","useState","getCurrentForecast","getCurrentForecastDetails","getUpcomingForecast","BASEURL","Page","error","setError","showForm","setShowForm","errorMessage","setErrorMessage","forecast","setForecast","onSubmit","location","data","method","url","params","q","units","headers","process","env","REACT_APP_RAPID_API_KEY","length","response","id","currentForecast","main","temp","name","dt","weather","currentForecastDetails","wind","upcomingForecast","list"],"mappings":"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","sourcesContent":["import Form from './Form'\nimport Forecast from './Forecast'\nimport '../styles/Page.css'\nimport axios from 'axios';\nimport { useState } from 'react'\nimport getCurrentForecast from '../helpers.js/getCurrentForecast';\nimport getCurrentForecastDetails from '../helpers.js/getCurrentForecastDetails';\nimport getUpcomingForecast from '../helpers.js/getUpcomingForecast';\n\nconst BASEURL = \"https://community-open-weather-map.p.rapidapi.com\"\n\nfunction Page() {\n\nconst [error, setError] = useState(false)\nconst [showForm, setShowForm] = useState(true)\nconst [errorMessage, setErrorMessage] = useState('')\nconst [forecast, setForecast] = useState(null)\n\nconst onSubmit = async location => {\n        const { data } = await axios({\n            method: 'GET',\n            url: `${BASEURL}/weather`,\n            params: {\n                q: location,\n                units: 'imperial'\n            },\n            headers: {\n                'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n                'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n            }\n        })\n\n        if (!data || data.length === 0) {\n            setError(true)\n            setErrorMessage(\"Location was not found...\")\n            return;\n        }\n        \n        const response = await axios({\n            method: 'GET',\n            url: `${BASEURL}/forecast/daily`,\n            params: {\n                id: data.id,\n                units: 'imperial'\n            },\n            headers: {\n                'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n                'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n            }\n        })\n\n        if (!response.data || response.data.length === 0) {\n            setError(true)\n            setErrorMessage(\"No additional forecast found for this location..\")\n            return;\n        }\n\n        const currentForecast = getCurrentForecast(data.main.temp, data.name, data.dt, data.weather[0]);\n        const currentForecastDetails = getCurrentForecastDetails(data.main, data.wind)\n        const upcomingForecast = getUpcomingForecast(response.data.list)\n\n        setForecast({ currentForecast, currentForecastDetails, upcomingForecast })\n}\n\n  return (\n        <div className=\"page__container\">\n            <div className='page__header'>Weather App</div>\n            <Form submitSearch={onSubmit} />\n            {forecast && <Forecast forecast={forecast} />}\n            <span className='page__errorMessage'>{errorMessage}</span>\n        </div>\n  )\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}