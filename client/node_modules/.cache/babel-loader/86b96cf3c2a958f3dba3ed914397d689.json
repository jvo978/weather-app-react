{"ast":null,"code":"var _jsxFileName = \"/Users/jasonvo/Code/weather-application/src/components/Page.js\",\n    _s = $RefreshSig$();\n\nimport Form from './Form';\nimport Forecast from './Forecast';\nimport '../styles/Page.css';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport getCurrentForecast from '../helpers.js/getCurrentForecast';\nimport getCurrentForecastDetails from '../helpers.js/getCurrentForecastDetails';\nimport getUpcomingForecast from '../helpers.js/getUpcomingForecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASEURL = \"https://community-open-weather-map.p.rapidapi.com\";\n\nfunction Page() {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [forecast, setForecast] = useState(null);\n\n  const onSubmit = async location => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: 'GET',\n        url: `${BASEURL}/weather`,\n        params: {\n          q: location,\n          units: 'imperial'\n        },\n        headers: {\n          'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n          'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n        }\n      });\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    } // if (!data || data.length === 0) {\n    //     setError(true)\n    //     setErrorMessage(\"Location was not found...\")\n    //     return;\n    // }\n\n\n    const response = await axios({\n      method: 'GET',\n      url: `${BASEURL}/forecast/daily`,\n      params: {\n        id: data.id,\n        units: 'imperial'\n      },\n      headers: {\n        'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n        'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n      }\n    });\n\n    if (!response.data || response.data.length === 0) {\n      setError(true);\n      setErrorMessage(\"No additional forecast found for this location..\");\n      return;\n    }\n\n    const currentForecast = getCurrentForecast(data.main.temp, data.name, data.dt, data.weather[0]);\n    const currentForecastDetails = getCurrentForecastDetails(data.main, data.wind);\n    const upcomingForecast = getUpcomingForecast(response.data.list);\n    setForecast({\n      currentForecast,\n      currentForecastDetails,\n      upcomingForecast\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__header\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      submitSearch: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), forecast && !error ? /*#__PURE__*/_jsxDEV(Forecast, {\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Page, \"tI/51YPTIukJB+RLeMuRqcExAfs=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/jasonvo/Code/weather-application/src/components/Page.js"],"names":["Form","Forecast","axios","useState","getCurrentForecast","getCurrentForecastDetails","getUpcomingForecast","BASEURL","Page","error","setError","errorMessage","setErrorMessage","forecast","setForecast","onSubmit","location","data","method","url","params","q","units","headers","process","env","REACT_APP_RAPID_API_KEY","console","log","err","response","id","length","currentForecast","main","temp","name","dt","weather","currentForecastDetails","wind","upcomingForecast","list"],"mappings":"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","sourcesContent":["import Form from './Form'\nimport Forecast from './Forecast'\nimport '../styles/Page.css'\nimport axios from 'axios';\nimport { useState } from 'react'\nimport getCurrentForecast from '../helpers.js/getCurrentForecast';\nimport getCurrentForecastDetails from '../helpers.js/getCurrentForecastDetails';\nimport getUpcomingForecast from '../helpers.js/getUpcomingForecast';\n\nconst BASEURL = \"https://community-open-weather-map.p.rapidapi.com\"\n\nfunction Page() {\n\nconst [error, setError] = useState(false)\nconst [errorMessage, setErrorMessage] = useState('')\nconst [forecast, setForecast] = useState(null)\n\nconst onSubmit = async location => {\n    try {\n        const { data } = await axios({\n            method: 'GET',\n            url: `${BASEURL}/weather`,\n            params: {\n                q: location,\n                units: 'imperial'\n            },\n            headers: {\n                'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n                'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n            }\n        })\n        console.log(data)\n    } catch(err) {\n        console.log(err)\n    }\n        // if (!data || data.length === 0) {\n        //     setError(true)\n        //     setErrorMessage(\"Location was not found...\")\n        //     return;\n        // }\n        \n        const response = await axios({\n            method: 'GET',\n            url: `${BASEURL}/forecast/daily`,\n            params: {\n                id: data.id,\n                units: 'imperial'\n            },\n            headers: {\n                'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n                'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY\n            }\n        })\n\n        if (!response.data || response.data.length === 0) {\n            setError(true)\n            setErrorMessage(\"No additional forecast found for this location..\")\n            return;\n        }\n\n        const currentForecast = getCurrentForecast(data.main.temp, data.name, data.dt, data.weather[0]);\n        const currentForecastDetails = getCurrentForecastDetails(data.main, data.wind)\n        const upcomingForecast = getUpcomingForecast(response.data.list)\n\n        setForecast({ currentForecast, currentForecastDetails, upcomingForecast })\n}\n\n  return (\n        <div className=\"page__container\">\n            <div className='page__header'>Weather App</div>\n            <Form submitSearch={onSubmit} />\n            {(forecast && !error) ? <Forecast forecast={forecast} /> : \n            <div className=\"page__errorMessage\">{errorMessage}</div>\n            } \n        </div>\n  )\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}